[build-system]
# Minimum requirements for the build system to execute.
# TODO: We should look at SciPy and set mins for these like they do
requires = [
    "setuptools==59.2.0",
    "wheel==0.37.0",
    "numpy"
]

[tool.cibuildwheel]
skip = "cp36-* *-manylinux_i686 *_ppc64le *_s390x *-musllinux* *-win32 pp*"
build-verbosity = "3"
before-all = "bash {project}/build_tools/cibw_before_all.sh {project}"
test-requires = "pytest"
test-command = "bash {project}/build_tools/cibw_test_command.sh {project}"
environment = { OPENMEEG_LIB="../../install/lib", OPENMEEG_INCLUDE="../../install/include/OpenMEEG", OPENMEEG_USE_SWIG="1" }

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
environment = { OPENMEEG_LIB="../../install/lib64", OPENMEEG_INCLUDE="../../install/include/OpenMEEG", OPENMEEG_USE_SWIG="1", OPENBLAS_INCLUDE="/usr/local/include", RUNNER_OS="Linux" }

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
test-skip = "*_arm64"
repair-wheel-command = [
  "export DYLD_LIBRARY_PATH=\"$GITHUB_WORKSPACE/install/lib\"",
  "delocate-listdeps {wheel}",
  " delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}"
]
environment = { OPENMEEG_LIB="../../install/lib", OPENMEEG_INCLUDE="../../install/include/OpenMEEG", OPENMEEG_USE_SWIG="1", OPENBLAS_INCLUDE="/usr/local/include" }

[tool.cibuildwheel.windows]
repair-wheel-command = [
  "export PATH=\"$GITHUB_WORKSPACE\\install\\bin;$PATH\"",
  "delvewheel repair -w {dest_dir} {wheel}"
]
before-build = "bash {project}/build_tools/cibw_before_build_windows.sh {project}"
environment = { OPENMEEG_USE_SWIG="0" }
