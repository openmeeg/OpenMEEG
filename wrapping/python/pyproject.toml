[build-system]
# Minimum requirements for the build system to execute.
# TODO: We should look at SciPy and set mins for these like they do
requires = [
    "setuptools>=68.0.0",
    "wheel>=0.37.0",
    "oldest-supported-numpy; platform_python_implementation!='PyPy'",
    "numpy==1.23.0; platform_python_implementation=='PyPy'",
]

[tool.cibuildwheel]
# TODO: only 3.8 until NumPy supplies wheels for 3.9 (not on PyPi as of 2022/08/27)
skip = "cp36-* *-manylinux_i686 *_ppc64le *_s390x *-musllinux* *-win32 pp37* pp39* pp*-win_*"
build-verbosity = "3"
before-all = "bash {project}/build_tools/cibw_before_all.sh {project}"
test-requires = ["pytest", "threadpoolctl"]
test-command = "bash {project}/build_tools/cibw_test_command.sh {project}"

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
repair-wheel-command = "auditwheel show {wheel} && auditwheel repair -w {dest_dir} {wheel}"
environment-pass = ["RUNNER_OS"]
environment = { OPENMEEG_LIB="../../install/lib64", OPENMEEG_INCLUDE="../../install/include/OpenMEEG", OPENMEEG_USE_SWIG="1", OPENBLAS_INCLUDE="/usr/local/include" }

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
test-skip = "*_arm64"
repair-wheel-command = "bash $GITHUB_WORKSPACE/build_tools/cibw_repair_wheel_command_macos.sh {delocate_archs} {dest_dir} {wheel}"
environment = { OPENMEEG_LIB="../../install/lib", OPENMEEG_INCLUDE="../../install/include/OpenMEEG", OPENMEEG_USE_SWIG="1", OPENBLAS_INCLUDE="/usr/local/include" }

[tool.cibuildwheel.windows]
before-build = "bash {project}/build_tools/cibw_before_build_windows.sh {project}"
repair-wheel-command = "bash %GITHUB_WORKSPACE%/build_tools/cibw_repair_wheel_command_windows.sh {dest_dir} {wheel}"
environment = { OPENMEEG_USE_SWIG="0" }

[tool.ruff]
select = ["E", "F", "W", "D", "I"]
exclude = ["__init__.py", "setup.py"]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D413", # Missing blank line after last section
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"*/tests/*.py" = [
    "D103", # Missing docstring in public function
]
