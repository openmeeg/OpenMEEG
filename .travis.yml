sudo: true

language: cpp

cache:
  ccache: true
  directories:
    - $HOME/downloads

matrix:
  include:

    - name: (shipping) MKL + minimal dep using conda
      os: linux
      dist: bionic
      env:
        - BACKEND=Intel10_64lp
        - BUILD_STATIC=ON
        - BUILD_PACKAGE=ON
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - name: (analyse) openblas, python, vtk, gcc-7, apt-get dependencies
      os: linux
      dist: bionic
      env:
        - BACKEND=OpenBLAS
        - USE_VTK=ON
        - ENABLE_PYTHON=ON
        - CMAKE_VERSION=3.12.4
        - SWIG_VERSION=4.0.1
        - ANALYSE=ON
        - ENABLE_COVERAGE=ON
        - BUILD_DOCUMENTATION=ON
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libopenblas-dev
            - liblapacke-dev # XXX: If lapacke is missing, cmake does not break at generation but at compilation.
            - python3-numpy
            - doxygen
            - graphviz
            - libmatio4
            - libmatio-dev
            - libvtk6-dev
            - lcov

    - name: (shipping) MKL + minimal dep using brew
      os: osx
      osx_image: xcode9.4
      env:
        - BACKEND=Intel10_64lp
        - BUILD_STATIC=ON
        - BUILD_PACKAGE=ON
      addons:
        homebrew:
          update: true
          packages:
            - cmake
            - hdf5
            - libmatio
            - boost

    - name: openblas, vtk, full dep using brew
      os: osx
      python: "3.7"
      env:
        - BACKEND=OpenBLAS
        - USE_VTK=ON
        - ENABLE_PYTHON=ON
        # - USE_GCC=ON  # XXX : vtk does not work with GCC
        # - USE_BREW_LLVM=ON  # XXX: To have OpenMP but segfaults...
      addons:
        homebrew:
          update: true
          packages:
            - cmake
            - gcc
            - hdf5
            - libmatio
            - boost
            - openblas
            - vtk
            - numpy
            - swig

    - name: (analyse) Static analysis using clang-analyzer
      os: osx
      env:
        - ENABLE_COVERAGE=ON
        - BACKEND=Apple
        - ANALYSE=ON
      addons:
        homebrew:
          update: true
          packages:
            - cmake
            - gcc
            - hdf5
            - libmatio
            - boost

before_install:
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew link --overwrite python;
    fi
  - eval "${MATRIX_EVAL}"

  # Travis machines have 2 cores
  - JOBS=2

  ############################################################################
  # Handle caching of downloaded files
  ############################################################################

  - export DL_DIR=$HOME/downloads
  - curl -fsSkL https://raw.githubusercontent.com/openmeeg/ci-utils/master/travis/travis_tools.sh > x.sh && source ./x.sh

  ############################################################################
  # Install MKL if necessary
  ############################################################################

  - |
    if [[ "${BACKEND}" == *"Intel"* ]]; then
      curl -fsSkL https://raw.githubusercontent.com/openmeeg/ci-utils/master/travis/install-mkl.sh > install_mkl.sh && source ./install_mkl.sh
    fi

  ############################################################################
  # Install Matio (using conda for shipping in Linux)
  ############################################################################

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${BUILD_PACKAGE}" == "ON" ]]; then
        git clone https://github.com/astropy/ci-helpers.git;
        source ci-helpers/travis/setup_conda.sh;
        conda install -c massich libmatio;
    fi

  ############################################################################
  # Install cmake (Bionic contains a cmake 3.10
  ############################################################################

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${ENABLE_PYTHON}" == "ON" ]]; then
      script=install_cmake.sh
      curl -fsSkL https://raw.githubusercontent.com/openmeeg/ci-utils/master/travis/${script} > ${script} && source ./${script}
    fi

  ############################################################################
  # Install Swig 4.0 (Bionic contains a swig 3.0 which has bugs in our context)
  ############################################################################

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${ENABLE_PYTHON}" == "ON" ]]; then
      script=install-swig.sh
      curl -fsSkL https://raw.githubusercontent.com/openmeeg/ci-utils/master/travis/${script} > ${script} && source ./${script}
    fi

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${ENABLE_PYTHON}" == "ON" ]]; then
      python3 --version
      python3 -c "import numpy; print(numpy.version.version)"
    fi

  ############################################################################
  # Install scan-build clang analyser
  ############################################################################

  - |
    export SCAN_BUILD=""
    if [[ "${ANALYSE}" == "ON" ]]; then
      export SCAN_BUILD="scan-build --status-bugs -o scanbuildout"
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        sudo apt-get install -qq clang;
      else
        curl http://clang-analyzer.llvm.org/downloads/checker-276.tar.bz2 -o /usr/local/Cellar/checker-276.bz2;
        cd /usr/local/Cellar/;
        tar -jxvf checker-276.bz2;
        ln -s /usr/local/Cellar/checker-276/scan-build /usr/local/bin/scan-build;
        rm checker-276.bz2;
      fi
      shopt -s expand_aliases
      # alias cmake="${SCAN_BUILD} cmake -DCMAKE_BUILD_TYPE=Debug"
      alias cmake="cmake -DCMAKE_BUILD_TYPE=Debug"
      alias make="${SCAN_BUILD} make"
    fi

  ############################################################################
  # Install brew llvm
  ############################################################################

  - |
    if [[ "${USE_BREW_LLVM}" == "ON" ]]; then
        brew install llvm;
        BREW_PREFIX=$(brew --prefix)
        export OMP_NUM_THREADS=4;
        export LDFLAGS="-L${BREW_PREFIX}/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib";
        export DYLD_LIBRARY_PATH="${BREW_PREFIX}/opt/llvm/lib:$DYLD_LIBRARY_PATH";
        export CC="${BREW_PREFIX}/opt/llvm/bin/clang";
        export CXX="${BREW_PREFIX}/opt/llvm/bin/clang++";
        export CPPFLAGS="-I${BREW_PREFIX}/opt/llvm/include $CPPFLAGS";
        export CFLAGS="-I${BREW_PREFIX}/opt/llvm/include $CFLAGS";
    fi

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && cd build
  - |
    if [[ $BUILD_PACKAGE == "ON" && $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_BRANCH == "master" ]]; then
      export CMAKE_OPTIONS=" -DBLA_VENDOR=$BACKEND"
    else
      export CMAKE_OPTIONS=" -DBLA_VENDOR=$BACKEND -DENABLE_COVERAGE=${ENABLE_COVERAGE}"
    fi
  - |
    if [[ "${BUILD_STATIC}" == "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DBLA_STATIC=ON"
    fi
  - |
    if [[ "${ENABLE_PYTHON}" == "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DENABLE_PYTHON=ON"
    fi
  - |
    if [[ "${CONFIGURATION}" == "Release" ]] && [[ "${ANALYSE}" != "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCMAKE_BUILD_TYPE=Release"
    fi
  - |
    if [[ "${USE_VTK}" == "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DUSE_VTK=ON"
    fi
  - |
    if [[ "${BUILD_DOCUMENTATION}" == "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DBUILD_DOCUMENTATION=ON"
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" && "${USE_GCC}" == "ON" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCMAKE_C_COMPILER=/usr/local/bin/gcc-7 -DCMAKE_CXX_COMPILER=/usr/local/bin/g++-7"
    fi
  - echo "cmake .. ${CMAKE_OPTIONS}"
  - cmake .. ${CMAKE_OPTIONS}
  - make -j ${JOBS}
  - CTEST_OUTPUT_ON_FAILURE=1 ctest .
  - |
    if [[ "${BUILD_PACKAGE}" == "ON" ]]; then
      cpack -G TGZ .
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        PACKAGE_DEPLOY=$(readlink OpenMEEG*.tar.gz -f)
      fi
      if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        brew install coreutils
        PACKAGE_DEPLOY=$(greadlink -f OpenMEEG*.tar.gz)
      fi
    fi
  - sudo make install
  - sudo make uninstall

after_success:
  - |
    if [[ "${ENABLE_COVERAGE}" == "ON" ]]; then
      lcov --directory . --capture --output-file coverage.info > /dev/null 2>&1 # capture coverage info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info > /dev/null 2>&1 # filter out system
      lcov --list coverage.info > /dev/null 2>&1
      bash <(curl -s https://codecov.io/bash) > /dev/null 2>&1
    fi
  - |
    if [[ "${BUILD_PACKAGE}" == "ON" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
      mkdir -p /tmp/xx/ && cd /tmp/xx/
      # MESSAGE=$(git log --format=%B -n 1 $TRAVIS_COMMIT)
      MESSAGE="[av skip] Push from openmeeg $(date)"
      git clone git://${GH_REPO}
      cd ${REPO}
      git config user.email "openmeeg@openmeeg.org"
      git config user.name "openmeeg"
      function gitpush() {
        git fetch origin
        git reset --hard origin/master
        cp -R ${PACKAGE_DEPLOY} ./
        echo "- $(date)" >> README.md
        git add ${FILES}
        git add OpenMEEG*.tar.gz
        git status
        git commit -m "${MESSAGE}"
        git pull --no-edit "https://${OPENMEEG_PACKAGING_TOKEN}@${GH_REPO}" master
        git push "https://${OPENMEEG_PACKAGING_TOKEN}@${GH_REPO}" master
      }
      travis_retry gitpush
    fi
  - source $TRAVIS_BUILD_DIR/build_tools/travis/after_success.sh

notifications:
  email: false

env:
  global:
    - src_dir: $TRAVIS_BUILD_DIR
    - secure: THD5qh1lrYDL2dEYVu+pitC+RsfB/Wn8jJjNTVFYEwPnSw5zov4N2aVNwOaHM4qJwp8NdL81ke4gI0P9vS89HPSstsnkboAwzn8Kj3UhAq0X10vnkgH+BIjUut0H3DCcY0O5Y2/1pc5KL/6pErT6tdFlRq8xS6YwVe7UKx3rEXo=
    - secure: XBNTHU+DVCKeUKjxVSfvAkFr/KnvzYDDn28u8Y41v9kT+yHE1HHPnSYJS9JndQllOUAXtT0Ix81LSKG9MVthIWs5uPTOOg4hPZloE8mOYWSs/EHLraEEbZFUAaoCz2ZVYdA92HM1YAVo4Bi+zMy9g7Ra4POSWwFY5n/zV+ma//A=
    - secure: NwGYiI9vDCLsIN+uAJRPlUV9g4RraaHfNiJRGBmsc8kOaPvBL2fb3Mia6nOfkfcaVOmkEPhWeAOW8XKHqVj6982SBQrbnS/xfU/EHiDJaq7YVBRfkCn4/9yswyhCxvrS97JagIgnEjlhbIV9VLZ19A/e2fhWEzGbJabLyZ0ZNBc=
    - secure: ZXoAGZAYFC/kPwiX+TEpNX+rh2zVrVIw6BDdd/Qt1SiBB3+BZWwosqh+Wv1mLpjce7IAOXO42rg/OUwfPMl2egjFHth8OU827dyfYC0yFsgfN6myWD+HK+U6/3i+fp5WknWOhXzzFc72CgBwYNCnrIKNJ5LUMESUyew+vIgo5p0=
    - CONFIGURATION=Release
    - USER="openmeeg"
    - REPO="openmeeg_packages"
    - FILES="README.md"
    - GH_REPO="github.com/${USER}/${REPO}.git"
    - secure: KPHv7A0gp+NNaj3oMeemI5Wt60Xlyc2XTr+zV4pxQmgoHTLA3c+8f+ZWCfF59pI/cmGhV0zG6noshOhXoPzS31fVIgpP1CHvpj2T16NOboM7G6lBpIBvncJ+a3BfzUUiLgPGlQYZRNeIATYl6shLaXP4FG8Nqt1O1TcE73M7Ba0=
